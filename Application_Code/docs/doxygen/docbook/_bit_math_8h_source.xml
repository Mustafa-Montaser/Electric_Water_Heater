<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__bit_math_8h_source" xml:lang="en-US">
<title>BitMath.h</title>
<indexterm><primary>Drivers/LIB/BitMath.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
19 <emphasis role="preprocessor">#ifndef&#32;_BIT_MATH_H</emphasis>
20 <emphasis role="preprocessor">#define&#32;_BIT_MATH_H</emphasis>
21 
22 
23 <emphasis role="comment">/*&#32;write&#32;value&#32;for&#32;single&#32;bit&#32;*/</emphasis>
24 <emphasis role="preprocessor">#define&#32;WRT_BIT(REG,&#32;BIT_INDEX,&#32;VAL)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;=&#32;((REG&#32;&amp;&#32;(~(1&#32;&lt;&lt;&#32;BIT_INDEX)))&#32;|&#32;(VAL&#32;&lt;&lt;&#32;BIT_INDEX))</emphasis>
25 
26 <emphasis role="comment">/*&#32;write&#32;value&#32;for&#32;2&#32;bits&#32;*/</emphasis>
27 <emphasis role="preprocessor">#define&#32;WRT_2BITS(REG,&#32;LS_BIT_INDEX,&#32;VAL)&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;=&#32;(REG&#32;&amp;&#32;(~(0b11&#32;&lt;&lt;&#32;LS_BIT_INDEX)))&#32;|&#32;(VAL&#32;&lt;&lt;&#32;LS_BIT_INDEX)</emphasis>
28 
29 <emphasis role="comment">/*&#32;write&#32;value&#32;for&#32;3&#32;bits&#32;*/</emphasis>
30 <emphasis role="preprocessor">#define&#32;WRT_3BITS(REG,&#32;LS_BIT_INDEX,&#32;VAL)&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;=&#32;(REG&#32;&amp;&#32;(~(0b111&#32;&lt;&lt;&#32;LS_BIT_INDEX)))&#32;|&#32;(VAL&#32;&lt;&lt;&#32;LS_BIT_INDEX)</emphasis>
31 
32 <emphasis role="comment">/*&#32;write&#32;value&#32;for&#32;4&#32;bits&#32;*/</emphasis>
33 <emphasis role="preprocessor">#define&#32;WRT_4BITS(REG,&#32;LS_BIT_INDEX,&#32;VAL)&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;=&#32;(REG&#32;&amp;&#32;(~(0b1111&#32;&lt;&lt;&#32;LS_BIT_INDEX)))&#32;|&#32;(VAL&#32;&lt;&lt;&#32;LS_BIT_INDEX)</emphasis>
34 
35 <emphasis role="comment">/*&#32;write&#32;value&#32;for&#32;5&#32;bits&#32;*/</emphasis>
36 <emphasis role="preprocessor">#define&#32;WRT_5BITS(REG,&#32;LS_BIT_INDEX,&#32;VAL)&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;=&#32;(REG&#32;&amp;&#32;(~(0b11111&#32;&lt;&lt;&#32;LS_BIT_INDEX)))&#32;|&#32;(VAL&#32;&lt;&lt;&#32;LS_BIT_INDEX)</emphasis>
37 
38 <emphasis role="comment">/*&#32;write&#32;value&#32;for&#32;16&#32;bits&#32;*/</emphasis>
39 <emphasis role="preprocessor">#define&#32;WRT_16BITS(REG,&#32;LS_BIT_INDEX,&#32;VAL)&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;=&#32;(REG&#32;&amp;&#32;(~(0xffff&#32;&lt;&lt;&#32;LS_BIT_INDEX)))&#32;|&#32;(VAL&#32;&lt;&lt;&#32;LS_BIT_INDEX)</emphasis>
40 
41 <emphasis role="comment">/*&#32;set&#32;single&#32;bit&#32;*/</emphasis>
42 <emphasis role="preprocessor">#define&#32;SET_BIT(REG,&#32;BIT_INDEX)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;|=&#32;(1&#32;&lt;&lt;&#32;BIT_INDEX)</emphasis>
43 
44 <emphasis role="comment">/*&#32;clear&#32;single&#32;bit&#32;*/</emphasis>
45 <emphasis role="preprocessor">#define&#32;CLR_BIT(REG,&#32;BIT_INDEX)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;&amp;=&#32;(~(1&#32;&lt;&lt;&#32;BIT_INDEX))</emphasis>
46 
47 <emphasis role="comment">/*&#32;toggle&#32;single&#32;bit&#32;*/</emphasis>
48 <emphasis role="preprocessor">#define&#32;TOG_BIT(REG,&#32;BIT_INDEX)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG&#32;^=&#32;(1&#32;&lt;&lt;&#32;BIT_INDEX)</emphasis>
49 
50 <emphasis role="comment">/*&#32;get&#32;single&#32;bit&#32;value&#32;*/</emphasis>
51 <emphasis role="preprocessor">#define&#32;GET_BIT(REG,&#32;BIT_INDEX)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((REG&#32;&gt;&gt;&#32;BIT_INDEX)&#32;&amp;&#32;1)</emphasis>
52 
53 <emphasis role="comment">/*&#32;get&#32;3&#32;bits&#32;value&#32;*/</emphasis>
54 <emphasis role="preprocessor">#define&#32;GET_3BITS(REG,&#32;BIT_INDEX)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((REG&#32;&gt;&gt;&#32;BIT_INDEX)&#32;&amp;&#32;0b111)</emphasis>
55 
56 
57 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_BIT_MATH_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
58 
</programlisting></section>
